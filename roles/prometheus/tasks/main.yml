---
- name: create node_exporter path
  file:
    path: "{{ node_exporter_path }}"
    state: directory

- name: download node_exporter
  get_url:
    url: "{{ node_exporter_url }}"
    dest: "{{ node_exporter_path }}/.node_exporter.tgz"
    checksum: "sha256:{{ node_exporter_sha256 }}"
  register: node_exporter

- name: extract node_exporter
  unarchive:
    src: "{{ node_exporter_path }}/.node_exporter.tgz"
    dest: "{{ node_exporter_path }}"
    extra_opts: "--strip-components=1"
    remote_src: yes
  when: node_exporter.changed
  notify: restart prometheus-node-exporter

- name: template prometheus-node-exporter.service
  template:
    src: prometheus-node-exporter.service
    dest: /lib/systemd/system/
  notify: restart prometheus-node-exporter

- name: enable prometheus-node-exporter service
  systemd:
    name: prometheus-node-exporter
    enabled: yes
    daemon_reload: yes

- name: download tor_exporter
  get_url:
    url: "{{ tor_exporter_url }}"
    dest: /opt/tor_exporter.deb
    checksum: "sha256:{{ tor_exporter_sha256 }}"
  register: tor_exporter

- name: install tor_exporter
  apt:
    deb: /opt/tor_exporter.deb
  when: tor_exporter.changed

- name: disable standard prometheus-tor-exporter service
  systemd:
    name: prometheus-tor-exporter
    state: stopped
    enabled: no

- name: template prometheus-tor-exporter services
  template:
    src: prometheus-tor-exporter.service
    dest: /lib/systemd/system/prometheus-tor-exporter-{{ item.name }}.service
  loop: "{{ tor_exporter_instances }}"

- name: enable prometheus-tor-exporter services
  systemd:
    name: prometheus-tor-exporter-{{ item.name }}
    state: started
    enabled: yes
    daemon_reload: yes
  loop: "{{ tor_exporter_instances }}"
